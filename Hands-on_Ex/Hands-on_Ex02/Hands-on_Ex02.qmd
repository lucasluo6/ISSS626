---
title: "Hands-on_Ex02"
author: "Luo Yuming"
date: "Aug 31 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  message: false
  freeze: true
---

------------------------------------------------------------------------

```{r}
pacman::p_load(sf, raster, spatstat, tmap, tidyverse, sp)
```

```{r}
childcare_sf <- st_read("data/child-care-services-geojson.geojson") %>%
  st_transform(crs = 3414)
```

```{r}
sg_sf <- st_read(dsn = "data", layer="CostalOutline")
```

```{r}
mpsz_sf <- st_read(dsn = "data", 
                layer = "MP14_SUBZONE_WEB_PL")
```

# Print CRS of each dataset

```{r}
st_crs(childcare_sf)
st_crs(sg_sf)
st_crs(mpsz_sf)
```

# Assign EPSG:3414 to sg_sf and mpsz_sf if they do not have any or incorrect CRS

```{r}
st_crs(sg_sf) <- 3414
st_crs(mpsz_sf) <- 3414
childcare_sf <- st_transform(childcare_sf, 3414)
```

# Transform datasets to the Singapore national projected coordinate system

```{r}
sg_sf <- st_transform(sg_sf, 3414)
mpsz_sf <- st_transform(mpsz_sf, 3414)
```

# Print CRS of each dataset

```{r}
st_crs(childcare_sf)
st_crs(sg_sf)
st_crs(mpsz_sf)
```

```{r}
tmap_mode('view')
tm_shape(childcare_sf)+
  tm_dots()
tmap_mode('plot')
```

```{r}
childcare <- as_Spatial(childcare_sf)
mpsz <- as_Spatial(mpsz_sf)
sg <- as_Spatial(sg_sf)
```

```{r}
# Function to display selected Spatial* object properties
display_spatial_info <- function(spatial_obj) {
  cat("Class:      ", class(spatial_obj)[1], "\n")
  cat("Features:   ", nrow(spatial_obj), "\n")
  cat("Extent:     ", paste(bbox(spatial_obj), collapse=" "), "\n")
  cat("CRS:        ", proj4string(spatial_obj), "\n")
  cat("Variables:  ", length(spatial_obj@data), "\n")
  cat("Names:      ", paste(names(spatial_obj@data), collapse=", "), "\n")
  
  min_values <- apply(spatial_obj@data, 2, min, na.rm = TRUE)
  max_values <- apply(spatial_obj@data, 2, max, na.rm = TRUE)
  
  cat("Min Values: ", paste(min_values, collapse=", "), "\n")
  cat("Max Values: ", paste(max_values, collapse=", "), "\n")
}

display_spatial_info(childcare)
display_spatial_info(mpsz)
display_spatial_info(sg)
```

```{r}
childcare_sp <- as(childcare, "SpatialPoints")
sg_sp <- as(sg, "SpatialPolygons")
childcare_sp
sg_sp
```
```{r}
#convert the spatial data into spatstatâ€™s ppp object format
childcare_ppp <- as.ppp(childcare_sf)
childcare_ppp
```
```{r}
plot(childcare_ppp)
```
```{r}
summary(childcare_ppp)
```
```{r}
#Handling duplicated points
any(duplicated(childcare_ppp))
#multiplicity(childcare_ppp)
sum(multiplicity(childcare_ppp) > 1)
tmap_mode('view')
tm_shape(childcare) +
  tm_dots(alpha=0.4, 
          size=0.05)
tmap_mode('plot')
```
```{r}
#Challenge
#jittering approach
childcare_ppp_jit <- rjitter(childcare_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)
any(duplicated(childcare_ppp_jit))
```
```{r}
sg_owin <- as.owin(sg_sf)
plot(sg_owin)
summary(sg_owin)
```
```{r}
childcareSG_ppp = childcare_ppp[sg_owin]
summary(childcareSG_ppp)
plot(childcareSG_ppp)
```

```{r}
kde_childcareSG_bw <- density(childcareSG_ppp,
                              sigma=bw.diggle,
                              edge=TRUE,
                            kernel="gaussian") 
plot(kde_childcareSG_bw)
```

```{r}
bw <- bw.diggle(childcareSG_ppp)
bw
childcareSG_ppp.km <- rescale.ppp(childcareSG_ppp, 1000, "km")
kde_childcareSG.bw <- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel="gaussian")
plot(kde_childcareSG.bw)
```

```{r}
#different automatic badwidth methods
 bw.CvL(childcareSG_ppp.km)
bw.scott(childcareSG_ppp.km)
bw.ppl(childcareSG_ppp.km)
bw.diggle(childcareSG_ppp.km)
```

```{r}
kde_childcareSG.ppl <- density(childcareSG_ppp.km, 
                               sigma=bw.ppl, 
                               edge=TRUE,
                               kernel="gaussian")
par(mfrow=c(1,2))
plot(kde_childcareSG.bw, main = "bw.diggle")
plot(kde_childcareSG.ppl, main = "bw.ppl")
```

```{r}
#different kernel methods
par(mfrow=c(2,2))
plot(density(childcareSG_ppp.km, 
             sigma=bw.ppl, 
             edge=TRUE, 
             kernel="gaussian"), 
     main="Gaussian")
plot(density(childcareSG_ppp.km, 
             sigma=bw.ppl, 
             edge=TRUE, 
             kernel="epanechnikov"), 
     main="Epanechnikov")
plot(density(childcareSG_ppp.km, 
             sigma=bw.ppl, 
             edge=TRUE, 
             kernel="quartic"), 
     main="Quartic")
plot(density(childcareSG_ppp.km, 
             sigma=bw.ppl, 
             edge=TRUE, 
             kernel="disc"), 
     main="Disc")
```

```{r}
#fixed bandwidth
kde_childcareSG_600 <- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel="gaussian")
plot(kde_childcareSG_600)

#adaptive bandwidth
kde_childcareSG_adaptive <- adaptive.density(childcareSG_ppp.km, method="kernel")
plot(kde_childcareSG_adaptive)

par(mfrow=c(1,2))
plot(kde_childcareSG.bw, main = "Fixed bandwidth")
plot(kde_childcareSG_adaptive, main = "Adaptive bandwidth")
```

```{r}
gridded_kde_childcareSG_bw <- maptools::as.SpatialGridDataFrame.im(kde_childcareSG.bw)
spplot(gridded_kde_childcareSG_bw)
kde_childcareSG_bw_raster <- raster(kde_childcareSG.bw)
kde_childcareSG_bw_raster
projection(kde_childcareSG_bw_raster) <- CRS("+init=EPSG:3414")
kde_childcareSG_bw_raster
tm_shape(kde_childcareSG_bw_raster) + 
  tm_raster("layer", palette = "viridis") +
  tm_layout(legend.position = c("right", "bottom"), frame = FALSE)

#KDE
pg <- mpsz_sf %>%
  filter(PLN_AREA_N == "PUNGGOL")
tm <- mpsz_sf %>%
  filter(PLN_AREA_N == "TAMPINES")
ck <- mpsz_sf %>%
  filter(PLN_AREA_N == "CHOA CHU KANG")
jw <- mpsz_sf %>%
  filter(PLN_AREA_N == "JURONG WEST")
par(mfrow=c(2,2))
plot(pg, main = "Ponggol")
plot(tm, main = "Tampines")
plot(ck, main = "Choa Chu Kang")
plot(jw, main = "Jurong West")
```

```{r}
pg_owin = as.owin(pg)
tm_owin = as.owin(tm)
ck_owin = as.owin(ck)
jw_owin = as.owin(jw)

childcare_pg_ppp = childcare_ppp_jit[pg_owin]
childcare_tm_ppp = childcare_ppp_jit[tm_owin]
childcare_ck_ppp = childcare_ppp_jit[ck_owin]
childcare_jw_ppp = childcare_ppp_jit[jw_owin]

childcare_pg_ppp.km = rescale.ppp(childcare_pg_ppp, 1000, "km")
childcare_tm_ppp.km = rescale.ppp(childcare_tm_ppp, 1000, "km")
childcare_ck_ppp.km = rescale.ppp(childcare_ck_ppp, 1000, "km")
childcare_jw_ppp.km = rescale.ppp(childcare_jw_ppp, 1000, "km")

par(mfrow=c(2,2))
plot(childcare_pg_ppp.km, main="Punggol")
plot(childcare_tm_ppp.km, main="Tampines")
plot(childcare_ck_ppp.km, main="Choa Chu Kang")
plot(childcare_jw_ppp.km, main="Jurong West")

par(mfrow=c(2,2))
plot(density(childcare_pg_ppp.km, 
             sigma=bw.diggle, 
             edge=TRUE, 
             kernel="gaussian"),
     main="Punggol")
plot(density(childcare_tm_ppp.km, 
             sigma=bw.diggle, 
             edge=TRUE, 
             kernel="gaussian"),
     main="Tempines")
plot(density(childcare_ck_ppp.km, 
             sigma=bw.diggle, 
             edge=TRUE, 
             kernel="gaussian"),
     main="Choa Chu Kang")
plot(density(childcare_jw_ppp.km, 
             sigma=bw.diggle, 
             edge=TRUE, 
             kernel="gaussian"),
     main="JUrong West")

par(mfrow=c(2,2))
plot(density(childcare_ck_ppp.km, 
             sigma=0.25, 
             edge=TRUE, 
             kernel="gaussian"),
     main="Chou Chu Kang")
plot(density(childcare_jw_ppp.km, 
             sigma=0.25, 
             edge=TRUE, 
             kernel="gaussian"),
     main="JUrong West")
plot(density(childcare_pg_ppp.km, 
             sigma=0.25, 
             edge=TRUE, 
             kernel="gaussian"),
     main="Punggol")
plot(density(childcare_tm_ppp.km, 
             sigma=0.25, 
             edge=TRUE, 
             kernel="gaussian"),
     main="Tampines")
```

```{r}
#Nearest Neighbour Analysis
clarkevans.test(childcareSG_ppp,
                correction="none",
                clipregion="sg_owin",
                alternative=c("clustered"),
                nsim=99)
print("The very low R value significantly less than 1, along with a very small p-value, strongly rejects the null hypothesis of random distribution. This suggests that childcare services in Singapore are significantly clustered.")

clarkevans.test(childcare_ck_ppp,
                correction="none",
                clipregion=NULL,
                alternative=c("two.sided"),
                nsim=999)
print("The R value is close to 1, and the high p-value does not reject the null hypothesis of random distribution at the 95% confidence level. This indicates that the distribution of childcare services in Choa Chu Kang is approximately random, showing neither significant clustering nor dispersion.")

clarkevans.test(childcare_tm_ppp,
                correction="none",
                clipregion=NULL,
                alternative=c("two.sided"),
                nsim=999)

print("The R value is below 1, and the very low p-value strongly rejects the null hypothesis. This suggests that the childcare services in Tampines are clustered, but not as strongly as in the overall Singapore area.")
```

